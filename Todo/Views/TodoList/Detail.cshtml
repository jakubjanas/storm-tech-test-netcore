@using Todo.Data.Entities
@using Todo.Services
@using Todo.Views.TodoItem
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>


<div class="col-md-6">
    <ul class="list-group">

        <li class="list-group-item">
            <div class="row">
                <div class="col-md-8">
                    <a href="#" onclick="addNewItem(@Model.TodoListId)">
                        <strong>Add New Item</strong>
                    </a>
                </div>
                <div class="col-md-4 text-right">
                    <input type="checkbox" id="hideDoneItemsBtn" value="false" name="hideDoneItemsBtn" />
                    <label for="hideDoneItemsBtn">Hide done items</label>
                </div>
            </div>
            <div>
                <form method="get" asp-controller="TodoList" asp-action="Detail">
                    @Html.HiddenFor(m => m.TodoListId)
                    <div class="form-group">
                        <label asp-for="SortOrder"></label>
                        @Html.DropDownListFor(
                            m => m.SortOrder,
                            SelectListConvenience.SortDirectionItems,
                            new { @class = "form-control", onchange = @"form.submit();" }
                            )
                    </div>
                </form>
            </div>
        </li>

        <li class="list-group-item">
            <div id="add-new-item" />
        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass @(item.IsDone ? "is-done" : "")">

                <div class="row">
                    <div class="col-md-8">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.UserName
                            @await Gravatar.GetName(item.ResponsibleParty.Email)

                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30" />
                        </small>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>